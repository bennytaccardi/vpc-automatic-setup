- name: Create known_hosts file if it doesn't exist
  file:
    path: "/home/{{ custom_user }}/.ssh/known_hosts"
    state: touch
    owner: "{{ custom_user }}"
    group: "{{ custom_user }}"
    mode: "0644"
  become: yes

- name: Add host key to known_hosts
  known_hosts:
    name: "{{ ansible_host }}"
    state: present
    key: "{{ lookup('pipe', 'ssh-keyscan -t rsa ' + ansible_host) }}"
  become: yes
  become_user: "{{ custom_user }}"
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true

- name: Test if {{ custom_user }} can connect via SSH with generated key
  command: "ssh -o BatchMode=yes -o StrictHostKeyChecking=accept-new -i /home/{{ custom_user }}/.ssh/id_rsa {{ custom_user }}@{{ ansible_host }} echo 'SSH access working'"
  become: yes
  become_user: "{{ custom_user }}"
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  ignore_errors: yes
  register: ssh_test_result

- name: Fail if SSH access for {{ custom_user }} is not working
  fail:
    msg: "SSH access is not working for {{ custom_user }}. Halting playbook."
  when: ssh_test_result.rc != 0
